# Name of the action
name: Automatic Release

# Event to run on
on:
  # Will run on every push in the "main" branch
  push:
    branches:
      - master

permissions:
  contents: write

# Jobs that will execute
jobs:
  release:
    name: Setup Environment, Build JAR and Release Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        # Setup Java to the specified version
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
        # Find the current Build tool
      - name: Setup Build Tool
        id: getbuildtool
        run: "echo BUILD_TOOL=$(bash ./scripts/get_build_tool.sh) >> $GITHUB_OUTPUT"
        shell: bash
      - name: Check Valid Build Tool
        if: ${{ steps.getbuildtool.outputs.BUILD_TOOL == 'JAVA' }}
        run: |-
          echo "This Github Action does NOT support building from raw Java."
          echo "Please use Maven or Gradle to build your projects!"
          exit 1
        shell: bash
      # Build using Maven
      - name: Build Maven
        id: maven
        if: ${{ steps.getbuildtool.outputs.BUILD_TOOL == 'MAVEN' }}
        run: |-
          /usr/bin/mvn package
          echo VARIABLES="pom.xml pom.xml modules target/ (?<=<version>)([0-9.]+(-SNAPSHOT)?) (?<=<module>)([^<]+)" >> $GITHUB_OUTPUT
        shell: bash
      # Build using Gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        if: ${{ steps.getbuildtool.outputs.BUILD_TOOL == 'GRADLE' }}
      - name: Build Gradle
        id: gradle
        if: ${{ steps.getbuildtool.outputs.BUILD_TOOL == 'GRADLE' }}
        run: |-
          chmod +x gradlew
          ./gradlew build
          echo VARIABLES="build.gradle settings.gradle include build/libs/ (?<=version\s=\s(\"|'))([0-9.]+(-SNAPSHOT)?) (?<=include\s(\"|'))([^\"']+)" >> $GITHUB_OUTPUT
        shell: bash
      # Obtain the Project version and modules
      - name: Gather Project Info
        id: gatherinfo
        env:
          MAVEN_VARS: ${{ steps.maven.outputs.VARIABLES }}
          GRADLE_VARS: ${{ steps.gradle.outputs.VARIABLES }}
        run: |-
          VARS=$MAVEN_VARS
          test "$VARS" == "" && VARS=$GRADLE_VARS
          VARS=($VARS)
          export BUILD_FILE="${VARS[0]}"
          export MODULES_FILE="${VARS[1]}"
          export MODULES_ID="${VARS[2]}"
          export OUTPUT_DIR="${VARS[3]}"
          export VERSION_REGEX="${VARS[4]}"
          export MODULES_REGEX="${VARS[5]}"
          bash ./scripts/gather_buildtool_facts.sh
        shell: bash
      - name: Release Project
        env:
          VERSION: ${{ steps.gatherinfo.outputs.VERSION }}
          FILES: ${{ steps.gatherinfo.outputs.FILES }}
          BUILD_TOOL: ${{ steps.getbuildtool.outputs.BUILD_TOOL }}
        run: |-
          export VERSION=$VERSION
          export FILES=$FILES
          export BUILD_TOOL=$BUILD_TOOL
          bash ./scripts/release.sh
        shell: bash
